openapi: 3.1.0
swagger : 2.0
info:
  title: Enhanced Rental System API
  description: |2-

        üè† **–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—Ä–µ–Ω–¥–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏**
        
        –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—Ä–µ–Ω–¥–æ–π –∫–≤–∞—Ä—Ç–∏—Ä —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.
        
        ## –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
        
        * üè¢ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è–º–∏** - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å—Ç–∞—Ç—É—Å—ã
        * üë• **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏** - –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤, –∏—Å—Ç–æ—Ä–∏—è, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
        * üìã **–°–∏—Å—Ç–µ–º–∞ –∞—Ä–µ–Ω–¥—ã** - —Å–æ–∑–¥–∞–Ω–∏–µ, –ø—Ä–æ–¥–ª–µ–Ω–∏–µ, –∑–∞—Å–µ–ª–µ–Ω–∏–µ/–≤—ã—Å–µ–ª–µ–Ω–∏–µ
        * ‚úÖ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏** - —É–±–æ—Ä–∫–∞, –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –∞–≤—Ç–æ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ
        * üõí **–ó–∞–∫–∞–∑—ã –≤ –Ω–æ–º–µ—Ä** - –µ–¥–∞, —É—Å–ª—É–≥–∏, –¥–æ—Å—Ç–∞–≤–∫–∞
        * üí∞ **–§–∏–Ω–∞–Ω—Å—ã –∏ –æ—Ç—á–µ—Ç—ã** - –¥–æ—Ö–æ–¥—ã, —Ä–∞—Å—Ö–æ–¥—ã, –∑–∞—Ä–ø–ª–∞—Ç–∞
        * üìÑ **–î–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç** - –¥–æ–≥–æ–≤–æ—Ä—ã, –∞–∫—Ç—ã, –≠–°–§
        * üìä **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞** - –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        * üì¶ **–°–∫–ª–∞–¥** - —É—á–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, —Å–ø–∏—Å–∞–Ω–∏–µ
        
        ## –†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        
        * **System Owner** - –≤–ª–∞–¥–µ–ª–µ—Ü —Å–∏—Å—Ç–µ–º—ã (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø)
        * **Admin** - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ 
        * **Manager** - –º–µ–Ω–µ–¥–∂–µ—Ä (–∞—Ä–µ–Ω–¥–∞, –∫–ª–∏–µ–Ω—Ç—ã)
        * **Technical Staff** - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª
        * **Accountant** - –±—É—Ö–≥–∞–ª—Ç–µ—Ä (—Ñ–∏–Ω–∞–Ω—Å—ã, –æ—Ç—á–µ—Ç—ã)
        * **Cleaner** - —É–±–æ—Ä—â–∏–∫ (–∑–∞–¥–∞—á–∏ —É–±–æ—Ä–∫–∏)
        * **Storekeeper** - –∫–ª–∞–¥–æ–≤—â–∏–∫ (—Å–∫–ª–∞–¥, –º–∞—Ç–µ—Ä–∏–∞–ª—ã)
        
        ## –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
        
        * üîê **–ú—É–ª—å—Ç–∏—Ç–µ–Ω–∞–Ω—Ç–Ω–æ—Å—Ç—å** - –∏–∑–æ–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏
        * üîÑ **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è** - –∞–≤—Ç–æ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–¥–∞—á, —Ä–∞—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã
        * üì± **–ú–æ–±–∏–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞** - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        * üõ°Ô∏è **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** - JWT —Ç–æ–∫–µ–Ω—ã, –∞—É–¥–∏—Ç –¥–µ–π—Å—Ç–≤–∏–π
        * üìà **–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å** - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö
        * üåç **–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è** - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ –∏ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–æ–≤
        
        ## –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        
        * **–≠–°–§/–≠–ê–í–†** - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ò–° –≠–°–§ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞
        * **–ü–ª–∞—Ç–µ–∂–∏** - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
        * **–û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å** - —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel, PDF
        * **–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è** - SMS, email, push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        
        ## –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        
        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Bearer —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization:
        ```
        Authorization: Bearer <your_token>
        ```
        
  version: 2.0.0
paths:
  /api/organization/info:
    get:
      tags:
        - Organization Management
      summary: Get Organization Info
      description: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
      operationId: get_organization_info_api_organization_info_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - HTTPBearer: []
  /api/organization/users:
    get:
      tags:
        - Organization Management
      summary: Get Organization Users
      description: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
      operationId: get_organization_users_api_organization_users_get
      security:
        - HTTPBearer: []
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 1000
            minimum: 1
            default: 100
            title: Limit
        - name: role
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/UserRole'
              - type: 'null'
            title: Role
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/UserStatus'
              - type: 'null'
            title: Status
        - name: search
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Search
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
                title: Response Get Organization Users Api Organization Users Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Organization Management
      summary: Create Organization User
      description: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
      operationId: create_organization_user_api_organization_users_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schemas__admin__UserCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/organization/users/{user_id}:
    get:
      tags:
        - Organization Management
      summary: Get Organization User
      description: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ
      operationId: get_organization_user_api_organization_users__user_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Organization Management
      summary: Update Organization User
      description: –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
      operationId: update_organization_user_api_organization_users__user_id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Organization Management
      summary: Delete Organization User
      description: –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
      operationId: delete_organization_user_api_organization_users__user_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/organization/dashboard/statistics:
    get:
      tags:
        - Organization Management
      summary: Get Dashboard Statistics
      description: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
      operationId: get_dashboard_statistics_api_organization_dashboard_statistics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - HTTPBearer: []
  /api/organization/users/{user_id}/performance:
    get:
      tags:
        - Organization Management
      summary: Get User Performance
      description: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
      operationId: get_user_performance_api_organization_users__user_id__performance_get
      security:
        - HTTPBearer: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
        - name: period_days
          in: query
          required: false
          schema:
            type: integer
            maximum: 365
            minimum: 1
            default: 30
            title: Period Days
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/organization/users/roles/available:
    get:
      tags:
        - Organization Management
      summary: Get Available Roles
      description: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–æ–ª–µ–π –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
      operationId: get_available_roles_api_organization_users_roles_available_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - HTTPBearer: []
  /api/organization/users/{user_id}/reset-password:
    post:
      tags:
        - Organization Management
      summary: Reset User Password
      description: –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
      operationId: reset_user_password_api_organization_users__user_id__reset_password_post
      security:
        - HTTPBearer: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/organization/audit/recent-actions:
    get:
      tags:
        - Organization Management
      summary: Get Recent Audit Actions
      description: –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
      operationId: get_recent_audit_actions_api_organization_audit_recent_actions_get
      security:
        - HTTPBearer: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            default: 50
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/properties:
    get:
      tags:
        - Properties
      summary: Get Properties
      description: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–º–µ—â–µ–Ω–∏–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
      operationId: get_properties_api_properties_get
      security:
        - HTTPBearer: []
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 1000
            minimum: 1
            default: 100
            title: Limit
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/PropertyStatus'
              - type: 'null'
            title: Status
        - name: property_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/PropertyType'
              - type: 'null'
            title: Property Type
        - name: search
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Search
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyResponse'
                title: Response Get Properties Api Properties Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Properties
      summary: Create Property
      description: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ
      operationId: create_property_api_properties_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/properties/{property_id}:
    get:
      tags:
        - Properties
      summary: Get Property
      description: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–º–µ—â–µ–Ω–∏–∏
      operationId: get_property_api_properties__property_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: property_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Property Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Properties
      summary: Update Property
      description: –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–º–µ—â–µ–Ω–∏–µ
      operationId: update_property_api_properties__property_id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: property_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Property Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Properties
      summary: Delete Property
      description: –£–¥–∞–ª–∏—Ç—å –ø–æ–º–µ—â–µ–Ω–∏–µ
      operationId: delete_property_api_properties__property_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: property_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Property Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/properties/{property_id}/status:
    patch:
      tags:
        - Properties
      summary: Update Property Status
      description: –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–º–µ—â–µ–Ω–∏—è
      operationId: update_property_status_api_properties__property_id__status_patch
      security:
        - HTTPBearer: []
      parameters:
        - name: property_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Property Id
        - name: new_status
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PropertyStatus'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/properties/{property_id}/tasks:
    get:
      tags:
        - Properties
      summary: Get Property Tasks
      description: –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–æ–º–µ—â–µ–Ω–∏—è
      operationId: get_property_tasks_api_properties__property_id__tasks_get
      security:
        - HTTPBearer: []
      parameters:
        - name: property_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Property Id
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TaskStatus'
              - type: 'null'
            title: Status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
                title: >-
                  Response Get Property Tasks Api Properties  Property Id  Tasks
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Properties
      summary: Create Property Task
      description: –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –¥–ª—è –ø–æ–º–µ—â–µ–Ω–∏—è
      operationId: create_property_task_api_properties__property_id__tasks_post
      security:
        - HTTPBearer: []
      parameters:
        - name: property_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Property Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/properties/{property_id}/availability:
    get:
      tags:
        - Properties
      summary: Check Property Availability
      description: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–º–µ—â–µ–Ω–∏—è –Ω–∞ –ø–µ—Ä–∏–æ–¥
      operationId: >-
        check_property_availability_api_properties__property_id__availability_get
      security:
        - HTTPBearer: []
      parameters:
        - name: property_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Property Id
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date-time
            title: Start Date
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            format: date-time
            title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/properties/{property_id}/statistics:
    get:
      tags:
        - Properties
      summary: Get Property Statistics
      description: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–º–µ—â–µ–Ω–∏—é
      operationId: get_property_statistics_api_properties__property_id__statistics_get
      security:
        - HTTPBearer: []
      parameters:
        - name: property_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Property Id
        - name: period_days
          in: query
          required: false
          schema:
            type: integer
            maximum: 365
            minimum: 1
            default: 30
            title: Period Days
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/rentals:
    get:
      tags:
        - Rentals
      summary: Get Rentals
      description: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞—Ä–µ–Ω–¥
      operationId: get_rentals_api_rentals_get
      security:
        - HTTPBearer: []
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 1000
            minimum: 1
            default: 100
            title: Limit
        - name: is_active
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            title: Is Active
        - name: rental_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/RentalType'
              - type: 'null'
            title: Rental Type
        - name: property_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Property Id
        - name: client_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Client Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RentalResponse'
                title: Response Get Rentals Api Rentals Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Rentals
      summary: Create Rental
      description: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∞—Ä–µ–Ω–¥—É
      operationId: create_rental_api_rentals_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/rentals/{rental_id}:
    get:
      tags:
        - Rentals
      summary: Get Rental
      description: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—Ä–µ–Ω–¥–µ
      operationId: get_rental_api_rentals__rental_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: rental_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Rental Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Rentals
      summary: Update Rental
      description: –û–±–Ω–æ–≤–∏—Ç—å –∞—Ä–µ–Ω–¥—É
      operationId: update_rental_api_rentals__rental_id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: rental_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Rental Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Rentals
      summary: Cancel Rental
      description: –û—Ç–º–µ–Ω–∏—Ç—å –∞—Ä–µ–Ω–¥—É
      operationId: cancel_rental_api_rentals__rental_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: rental_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Rental Id
        - name: reason
          in: query
          required: true
          schema:
            type: string
            minLength: 1
            title: Reason
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/rentals/{rental_id}/check-in:
    post:
      tags:
        - Rentals
      summary: Check In Rental
      description: –ó–∞—Å–µ–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
      operationId: check_in_rental_api_rentals__rental_id__check_in_post
      security:
        - HTTPBearer: []
      parameters:
        - name: rental_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Rental Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/rentals/{rental_id}/check-out:
    post:
      tags:
        - Rentals
      summary: Check Out Rental
      description: –í—ã—Å–µ–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
      operationId: check_out_rental_api_rentals__rental_id__check_out_post
      security:
        - HTTPBearer: []
      parameters:
        - name: rental_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Rental Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/clients:
    get:
      tags:
        - Clients
      summary: Get Clients
      description: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤
      operationId: get_clients_api_clients_get
      security:
        - HTTPBearer: []
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 1000
            minimum: 1
            default: 100
            title: Limit
        - name: search
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Search
        - name: source
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Source
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientResponse'
                title: Response Get Clients Api Clients Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Clients
      summary: Create Client
      description: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
      operationId: create_client_api_clients_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/clients/{client_id}:
    get:
      tags:
        - Clients
      summary: Get Client
      description: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–µ
      operationId: get_client_api_clients__client_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Client Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Clients
      summary: Update Client
      description: –û–±–Ω–æ–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
      operationId: update_client_api_clients__client_id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Client Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Clients
      summary: Delete Client
      description: –£–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
      operationId: delete_client_api_clients__client_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Client Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/clients/{client_id}/history:
    get:
      tags:
        - Clients
      summary: Get Client History
      description: –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∫–ª–∏–µ–Ω—Ç–∞
      operationId: get_client_history_api_clients__client_id__history_get
      security:
        - HTTPBearer: []
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Client Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/clients/{client_id}/statistics:
    get:
      tags:
        - Clients
      summary: Get Client Statistics
      description: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–ª–∏–µ–Ω—Ç—É
      operationId: get_client_statistics_api_clients__client_id__statistics_get
      security:
        - HTTPBearer: []
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Client Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/clients/bulk-import:
    post:
      tags:
        - Clients
      summary: Bulk Import Clients
      description: –ú–∞—Å—Å–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤
      operationId: bulk_import_clients_api_clients_bulk_import_post
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ClientCreate'
              type: array
              title: Clients Data
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/orders:
    get:
      tags:
        - Room Orders
      summary: Get Orders
      description: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –≤ –Ω–æ–º–µ—Ä
      operationId: get_orders_api_orders_get
      security:
        - HTTPBearer: []
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 1000
            minimum: 1
            default: 100
            title: Limit
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/OrderStatus'
              - type: 'null'
            title: Status
        - name: order_type
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Order Type
        - name: property_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Property Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomOrderResponse'
                title: Response Get Orders Api Orders Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Room Orders
      summary: Create Order
      description: –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –≤ –Ω–æ–º–µ—Ä
      operationId: create_order_api_orders_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomOrderCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomOrderResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/orders/{order_id}:
    get:
      tags:
        - Room Orders
      summary: Get Order
      description: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
      operationId: get_order_api_orders__order_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Order Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomOrderResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Room Orders
      summary: Update Order
      description: –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑
      operationId: update_order_api_orders__order_id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Order Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomOrderUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomOrderResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/orders/{order_id}/assign:
    post:
      tags:
        - Room Orders
      summary: Assign Order
      description: –ù–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–∫–∞–∑ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é
      operationId: assign_order_api_orders__order_id__assign_post
      security:
        - HTTPBearer: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Order Id
        - name: assigned_to
          in: query
          required: true
          schema:
            type: string
            title: Assigned To
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/orders/{order_id}/complete:
    post:
      tags:
        - Room Orders
      summary: Complete Order
      description: –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑
      operationId: complete_order_api_orders__order_id__complete_post
      security:
        - HTTPBearer: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Order Id
        - name: completion_notes
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Completion Notes
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/orders/statistics/overview:
    get:
      tags:
        - Room Orders
      summary: Get Orders Statistics
      description: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∑–∞–∫–∞–∑–∞–º
      operationId: get_orders_statistics_api_orders_statistics_overview_get
      security:
        - HTTPBearer: []
      parameters:
        - name: period_days
          in: query
          required: false
          schema:
            type: integer
            maximum: 365
            minimum: 1
            default: 30
            title: Period Days
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tasks:
    get:
      tags:
        - Tasks
      summary: Get Tasks
      description: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
      operationId: get_tasks_api_tasks_get
      security:
        - HTTPBearer: []
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 1000
            minimum: 1
            default: 100
            title: Limit
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TaskStatus'
              - type: 'null'
            title: Status
        - name: task_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TaskType'
              - type: 'null'
            title: Task Type
        - name: priority
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TaskPriority'
              - type: 'null'
            title: Priority
        - name: property_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Property Id
        - name: assigned_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Assigned To
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
                title: Response Get Tasks Api Tasks Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Tasks
      summary: Create Task
      description: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
      operationId: create_task_api_tasks_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tasks/{task_id}:
    get:
      tags:
        - Tasks
      summary: Get Task
      description: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–µ
      operationId: get_task_api_tasks__task_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Tasks
      summary: Update Task
      description: –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–¥–∞—á—É
      operationId: update_task_api_tasks__task_id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Task Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Tasks
      summary: Cancel Task
      description: –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É
      operationId: cancel_task_api_tasks__task_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Task Id
        - name: reason
          in: query
          required: true
          schema:
            type: string
            minLength: 1
            title: Reason
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tasks/{task_id}/assign:
    post:
      tags:
        - Tasks
      summary: Assign Task
      description: –ù–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é
      operationId: assign_task_api_tasks__task_id__assign_post
      security:
        - HTTPBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Task Id
        - name: assigned_to
          in: query
          required: true
          schema:
            type: string
            title: Assigned To
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tasks/{task_id}/start:
    post:
      tags:
        - Tasks
      summary: Start Task
      description: –ù–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
      operationId: start_task_api_tasks__task_id__start_post
      security:
        - HTTPBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tasks/{task_id}/complete:
    post:
      tags:
        - Tasks
      summary: Complete Task
      description: –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–¥–∞—á—É
      operationId: complete_task_api_tasks__task_id__complete_post
      security:
        - HTTPBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Task Id
        - name: completion_notes
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Completion Notes
        - name: quality_rating
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                maximum: 5
                minimum: 1
              - type: 'null'
            title: Quality Rating
        - name: actual_duration
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 1
              - type: 'null'
            title: Actual Duration
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tasks/my/assigned:
    get:
      tags:
        - Tasks
      summary: Get My Assigned Tasks
      description: –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
      operationId: get_my_assigned_tasks_api_tasks_my_assigned_get
      security:
        - HTTPBearer: []
      parameters:
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TaskStatus'
              - type: 'null'
            title: Status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
                title: Response Get My Assigned Tasks Api Tasks My Assigned Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tasks/statistics/overview:
    get:
      tags:
        - Tasks
      summary: Get Tasks Statistics
      description: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∑–∞–¥–∞—á–∞–º
      operationId: get_tasks_statistics_api_tasks_statistics_overview_get
      security:
        - HTTPBearer: []
      parameters:
        - name: period_days
          in: query
          required: false
          schema:
            type: integer
            maximum: 365
            minimum: 1
            default: 30
            title: Period Days
        - name: user_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tasks/workload/employees:
    get:
      tags:
        - Tasks
      summary: Get Employees Workload
      description: –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
      operationId: get_employees_workload_api_tasks_workload_employees_get
      security:
        - HTTPBearer: []
      parameters:
        - name: role
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/UserRole'
              - type: 'null'
            title: Role
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tasks/urgent:
    get:
      tags:
        - Tasks
      summary: Get Urgent Tasks
      description: –ü–æ–ª—É—á–∏—Ç—å —Å—Ä–æ—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
      operationId: get_urgent_tasks_api_tasks_urgent_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskResponse'
                type: array
                title: Response Get Urgent Tasks Api Tasks Urgent Get
      security:
        - HTTPBearer: []
  /api/tasks/auto-assign:
    post:
      tags:
        - Tasks
      summary: Auto Assign Tasks
      description: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º
      operationId: auto_assign_tasks_api_tasks_auto_assign_post
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
              title: Task Ids
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/tasks/maintenance/create-recurring:
    post:
      tags:
        - Tasks
      summary: Create Recurring Maintenance Tasks
      description: –°–æ–∑–¥–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
      operationId: >-
        create_recurring_maintenance_tasks_api_tasks_maintenance_create_recurring_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - HTTPBearer: []