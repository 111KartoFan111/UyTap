import React, { useState } from 'react';
import { FiDollarSign, FiCheck, FiX, FiCreditCard } from 'react-icons/fi';

const QuickPaymentPopup = ({ rental, onClose, onPaymentAdd, position }) => {
  const [paymentData, setPaymentData] = useState({
    amount: rental.total_amount - (rental.paid_amount || 0), // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Å—Ç–∞—Ç–æ–∫ –∫ –¥–æ–ø–ª–∞—Ç–µ
    method: 'cash',
    type: 'rent_payment'
  });
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (paymentData.amount <= 0) {
      alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É');
      return;
    }
    
    try {
      setLoading(true);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞
      const payment = {
        payment_amount: parseFloat(paymentData.amount),
        payment_method: paymentData.method,
        payment_type: paymentData.type,
        description: `–ë—ã—Å—Ç—Ä—É—é –æ–ø–ª–∞—Ç–∞ –∞—Ä–µ–Ω–¥—ã ${rental.property?.number || ''}`,
        auto_complete: true
      };
      
      await onPaymentAdd(rental.id, payment);
      onClose();
      
    } catch (error) {
      console.error('Quick payment failed:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const outstanding = rental.total_amount - (rental.paid_amount || 0);

  return (
    <div 
      className="fixed inset-0 bg-black bg-opacity-30 flex items-start justify-center z-50"
      onClick={onClose}
    >
      <div 
        className="bg-white rounded-lg shadow-xl p-4 w-80 mt-20"
        style={{
          position: 'absolute',
          top: position?.y || '20%',
          left: position?.x || '50%',
          transform: 'translateX(-50%)'
        }}
        onClick={e => e.stopPropagation()}
      >
        <div className="flex justify-between items-center mb-4">
          <h3 className="font-semibold flex items-center">
            <FiDollarSign className="mr-2 text-green-600" />
            –ë—ã—Å—Ç—Ä–∞—è –æ–ø–ª–∞—Ç–∞
          </h3>
          <button 
            onClick={onClose}
            className="text-gray-400 hover:text-gray-600"
          >
            <FiX />
          </button>
        </div>

        <div className="mb-4 p-3 bg-gray-50 rounded">
          <div className="text-sm text-gray-600">
            –ê—Ä–µ–Ω–¥–∞: {rental.property?.name || rental.property?.number}
          </div>
          <div className="text-sm text-gray-600">
            –ö–ª–∏–µ–Ω—Ç: {rental.client ? `${rental.client.first_name} ${rental.client.last_name}` : '–ù–µ —É–∫–∞–∑–∞–Ω'}
          </div>
          <div className="mt-2 flex justify-between">
            <span className="text-sm">–ö –¥–æ–ø–ª–∞—Ç–µ:</span>
            <span className="font-semibold text-red-600">
              ‚Ç∏ {outstanding.toLocaleString()}
            </span>
          </div>
        </div>

        <form onSubmit={handleSubmit} className="space-y-3">
          <div>
            <label className="block text-sm font-medium mb-1">–°—É–º–º–∞</label>
            <div className="relative">
              <input
                type="number"
                step="0.01"
                min="0.01"
                max={outstanding}
                value={paymentData.amount}
                onChange={(e) => setPaymentData(prev => ({
                  ...prev,
                  amount: e.target.value
                }))}
                className="w-full p-2 pl-8 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="0.00"
                required
              />
              <FiDollarSign className="absolute left-2 top-2.5 text-gray-400" size={16} />
            </div>
            <div className="flex gap-1 mt-1">
              <button
                type="button"
                onClick={() => setPaymentData(prev => ({...prev, amount: outstanding}))}
                className="text-xs bg-blue-100 text-blue-600 px-2 py-1 rounded hover:bg-blue-200"
              >
                –í–µ—Å—å –æ—Å—Ç–∞—Ç–æ–∫
              </button>
              <button
                type="button"
                onClick={() => setPaymentData(prev => ({...prev, amount: Math.round(outstanding / 2)}))}
                className="text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded hover:bg-gray-200"
              >
                –ü–æ–ª–æ–≤–∏–Ω–∞
              </button>
            </div>
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</label>
            <select
              value={paymentData.method}
              onChange={(e) => setPaymentData(prev => ({
                ...prev,
                method: e.target.value
              }))}
              className="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500"
            >
              <option value="cash">üíµ –ù–∞–ª–∏—á–Ω—ã–µ</option>
              <option value="card">üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</option>
              <option value="transfer">üè¶ –ü–µ—Ä–µ–≤–æ–¥</option>
              <option value="qr_code">üì± QR-–∫–æ–¥</option>
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">–¢–∏–ø –ø–ª–∞—Ç–µ–∂–∞</label>
            <select
              value={paymentData.type}
              onChange={(e) => setPaymentData(prev => ({
                ...prev,
                type: e.target.value
              }))}
              className="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500"
            >
              <option value="rent_payment">–û—Å–Ω–æ–≤–Ω–∞—è –æ–ø–ª–∞—Ç–∞</option>
              <option value="deposit">–ó–∞–ª–æ–≥</option>
              <option value="additional">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</option>
              <option value="penalty">–®—Ç—Ä–∞—Ñ</option>
            </select>
          </div>

          <div className="flex gap-2 pt-2">
            <button
              type="button"
              onClick={onClose}
              className="flex-1 px-3 py-2 border border-gray-300 rounded hover:bg-gray-50"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              type="submit"
              disabled={loading || !paymentData.amount}
              className="flex-1 bg-green-600 text-white px-3 py-2 rounded hover:bg-green-700 disabled:opacity-50 flex items-center justify-center"
            >
              {loading ? (
                <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent"></div>
              ) : (
                <>
                  <FiCheck className="mr-1" />
                  –î–æ–±–∞–≤–∏—Ç—å
                </>
              )}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –ø—Ä–∏–º–µ—Ä–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const RentalTableWithQuickPayment = () => {
  const [showQuickPayment, setShowQuickPayment] = useState(false);
  const [selectedRental, setSelectedRental] = useState(null);
  const [rentals, setRentals] = useState([
    {
      id: "1",
      total_amount: 50000,
      paid_amount: 0,
      property: { number: "101", name: "–ö–æ–º–Ω–∞—Ç–∞ 101" },
      client: { first_name: "–ò–≤–∞–Ω", last_name: "–ü–µ—Ç—Ä–æ–≤" },
      status: "completed"
    },
    {
      id: "2", 
      total_amount: 75000,
      paid_amount: 25000,
      property: { number: "102", name: "–ö–æ–º–Ω–∞—Ç–∞ 102" },
      client: { first_name: "–ú–∞—Ä–∏—è", last_name: "–°–∏–¥–æ—Ä–æ–≤–∞" },
      status: "active"
    },
    {
      id: "3",
      total_amount: 60000,
      paid_amount: 60000,
      property: { number: "103", name: "–ö–æ–º–Ω–∞—Ç–∞ 103" },
      client: { first_name: "–ü–µ—Ç—Ä", last_name: "–ö–æ–∑–ª–æ–≤" },
      status: "completed"
    }
  ]);

  const handleQuickPayment = (rental, event) => {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∫–ª–∏–∫–∞ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø–æ–ø–∞–ø–∞
    const rect = event.target.getBoundingClientRect();
    const position = {
      x: rect.left + rect.width / 2,
      y: rect.top + window.scrollY
    };
    
    setSelectedRental({ ...rental, popupPosition: position });
    setShowQuickPayment(true);
  };

  const handlePaymentAdd = async (rentalId, paymentData) => {
    // –ò–º–∏—Ç–∞—Ü–∏—è API –≤—ã–∑–æ–≤–∞
    console.log('Adding payment:', { rentalId, paymentData });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setRentals(prev => prev.map(rental => {
      if (rental.id === rentalId) {
        return {
          ...rental,
          paid_amount: (rental.paid_amount || 0) + paymentData.payment_amount
        };
      }
      return rental;
    }));
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ API
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    alert(`–ü–ª–∞—Ç–µ–∂ –Ω–∞ —Å—É–º–º—É ‚Ç∏${paymentData.payment_amount.toLocaleString()} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!`);
  };

  const getPaymentStatus = (rental) => {
    const paid = rental.paid_amount || 0;
    const total = rental.total_amount;
    
    if (paid === 0) return { status: 'unpaid', text: '‚ùå –ù–µ –æ–ø–ª–∞—á–µ–Ω–æ', color: 'text-red-600' };
    if (paid < total) return { status: 'partial', text: '‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–æ', color: 'text-yellow-600' };
    return { status: 'paid', text: '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ', color: 'text-green-600' };
  };

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-6">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥–æ–π —Å –±—ã—Å—Ç—Ä—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏</h1>
      
      <div className="bg-white rounded-lg shadow overflow-hidden">
        <table className="w-full">
          <thead className="bg-gray-50">
            <tr>
              <th className="px-4 py-3 text-left text-sm font-medium text-gray-900">–ü–æ–º–µ—â–µ–Ω–∏–µ</th>
              <th className="px-4 py-3 text-left text-sm font-medium text-gray-900">–ö–ª–∏–µ–Ω—Ç</th>
              <th className="px-4 py-3 text-left text-sm font-medium text-gray-900">–°—É–º–º–∞/–û–ø–ª–∞—Ç–∞</th>
              <th className="px-4 py-3 text-left text-sm font-medium text-gray-900">–°—Ç–∞—Ç—É—Å</th>
              <th className="px-4 py-3 text-left text-sm font-medium text-gray-900">–î–µ–π—Å—Ç–≤–∏—è</th>
            </tr>
          </thead>
          <tbody className="divide-y divide-gray-200">
            {rentals.map((rental) => {
              const paymentStatus = getPaymentStatus(rental);
              const outstanding = rental.total_amount - (rental.paid_amount || 0);
              
              return (
                <tr key={rental.id} className="hover:bg-gray-50">
                  <td className="px-4 py-4">
                    <div className="font-medium">{rental.property.name}</div>
                    <div className="text-sm text-gray-500">#{rental.property.number}</div>
                  </td>
                  <td className="px-4 py-4">
                    <div className="font-medium">
                      {rental.client.first_name} {rental.client.last_name}
                    </div>
                  </td>
                  <td className="px-4 py-4">
                    <div className="space-y-1">
                      <div className="text-sm">
                        <span className="text-gray-600">–°—É–º–º–∞: </span>
                        <span className="font-medium">‚Ç∏ {rental.total_amount.toLocaleString()}</span>
                      </div>
                      <div className="text-sm">
                        <span className="text-gray-600">–û–ø–ª–∞—á–µ–Ω–æ: </span>
                        <span className="font-medium">‚Ç∏ {(rental.paid_amount || 0).toLocaleString()}</span>
                      </div>
                      {outstanding > 0 && (
                        <div className="text-sm">
                          <span className="text-gray-600">–ö –¥–æ–ø–ª–∞—Ç–µ: </span>
                          <span className="font-medium text-red-600">‚Ç∏ {outstanding.toLocaleString()}</span>
                        </div>
                      )}
                    </div>
                    
                    {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
                    <div className="mt-2 w-full bg-gray-200 rounded-full h-2">
                      <div 
                        className={`h-2 rounded-full transition-all duration-300 ${
                          paymentStatus.status === 'paid' ? 'bg-green-500' : 
                          paymentStatus.status === 'partial' ? 'bg-yellow-500' : 'bg-red-500'
                        }`}
                        style={{ 
                          width: `${Math.min(((rental.paid_amount || 0) / rental.total_amount) * 100, 100)}%` 
                        }}
                      />
                    </div>
                  </td>
                  <td className="px-4 py-4">
                    <span className={`text-sm font-medium ${paymentStatus.color}`}>
                      {paymentStatus.text}
                    </span>
                  </td>
                  <td className="px-4 py-4">
                    <div className="flex items-center gap-2">
                      {outstanding > 0 && (
                        <button
                          onClick={(e) => handleQuickPayment(rental, e)}
                          className={`p-2 rounded-full hover:scale-110 transition-all ${
                            rental.paid_amount === 0 
                              ? 'bg-red-100 text-red-600 hover:bg-red-200' 
                              : 'bg-yellow-100 text-yellow-600 hover:bg-yellow-200'
                          }`}
                          title={`–î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞—Ç–µ–∂ (‚Ç∏${outstanding.toLocaleString()})`}
                        >
                          <FiDollarSign size={16} />
                        </button>
                      )}
                      
                      {paymentStatus.status === 'paid' && (
                        <button
                          className="p-2 rounded-full bg-green-100 text-green-600"
                          title="–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–ø–ª–∞—á–µ–Ω–æ"
                        >
                          <FiCheck size={16} />
                        </button>
                      )}
                      
                      <button
                        className="p-2 rounded-full bg-blue-100 text-blue-600 hover:bg-blue-200"
                        title="–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö"
                      >
                        <FiCreditCard size={16} />
                      </button>
                    </div>
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
      
      {/* –õ–µ–≥–µ–Ω–¥–∞ */}
      <div className="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
        <h3 className="font-semibold text-blue-900 mb-2">–ë—ã—Å—Ç—Ä—ã–µ –ø–ª–∞—Ç–µ–∂–∏:</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
          <div className="flex items-center">
            <div className="w-4 h-4 bg-red-500 rounded-full mr-2"></div>
            <span>–ö—Ä–∞—Å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ = –ù–µ—Ç –æ–ø–ª–∞—Ç—ã</span>
          </div>
          <div className="flex items-center">
            <div className="w-4 h-4 bg-yellow-500 rounded-full mr-2"></div>
            <span>–ñ–µ–ª—Ç–∞—è –∫–Ω–æ–ø–∫–∞ = –ß–∞—Å—Ç–∏—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞</span>
          </div>
          <div className="flex items-center">
            <div className="w-4 h-4 bg-green-500 rounded-full mr-2"></div>
            <span>–ó–µ–ª–µ–Ω–∞—è –≥–∞–ª–æ—á–∫–∞ = –ü–æ–ª–Ω–∞—è –æ–ø–ª–∞—Ç–∞</span>
          </div>
        </div>
        <p className="text-blue-700 text-sm mt-2">
          üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ü–≤–µ—Ç–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
        </p>
      </div>

      {/* Quick Payment Popup */}
      {showQuickPayment && selectedRental && (
        <QuickPaymentPopup
          rental={selectedRental}
          position={selectedRental.popupPosition}
          onClose={() => setShowQuickPayment(false)}
          onPaymentAdd={handlePaymentAdd}
        />
      )}
    </div>
  );
};

export default RentalTableWithQuickPayment;